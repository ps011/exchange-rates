name: Release Exchange Rates App

on:
  pull_request:
    types: [ closed, labeled ]
    branches: [ develop ]
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Release Type'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Set env vars
        run: mv .env.example .env
      - name: Build app
        run: npm run build

  version-bump-and-release:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout develop
        uses: actions/checkout@v3
        with:
          ref: develop
          fetch-depth: 0
      - name: Setup Git context
        run: |
          git config --local user.name "Prasheel Bot"
          git config --local user.email "prasheelsoni11+bot@gmail.com"
      - name: Bump version
        id: "version"
        run: |
          npm version major
          echo "version=$(npm run --silent get-version)" >> $GITHUB_OUTPUT
      - name: Create release branch based on version
        run: |
          git checkout -b "release/v$(npm run --silent get-version)"
          git push origin "release/v$(npm run --silent get-version)"
          echo "### {{ steps.version.outputs.version }} :rocket: $(npm run --silent get-version)" >> $GITHUB_STEP_SUMMARY

  merge-release-to-master:
    runs-on: ubuntu-latest
    needs: version-bump-and-release
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 1
      - name: Setup Git context
        run: |
          git config --local user.name "Prasheel Bot"
          git config --local user.email "prasheelsoni11+bot@gmail.com"
      - name: Merge release
        run: |
          git fetch
          git checkout main
          git pull origin main
          git fetch
          git checkout --track origin/release/v${{ needs.version-bump-and-release.outputs.version }}
          git checkout main
          git merge --no-ff release/v${{ needs.version-bump-and-release.outputs.version }}
          git push origin main -f
          git push origin :release/v${{ needs.version-bump-and-release.outputs.version }}
          git tag -a v${{ needs.version-bump-and-release.outputs.version }} -m v${{ needs.version-bump-and-release.outputs.version }}

  back-merge-master-to-develop:
    runs-on: ubuntu-latest
    needs: merge-release-to-master
    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v3
        with:
          ref: develop
          fetch-depth: 0
      - name: Setup Git context
        run: |
          git config --local user.name "Prasheel Bot"
          git config --local user.email "prasheelsoni11+bot@gmail.com"
      - name: Back-merge master to develop
        run: |
          git merge main -m "Back-merge master changes to develop"
          git push origin develop -f